---
import Profile from "../../components/Profile.astro"
import Base from "../../layouts/Base.astro"
import Button from "../../components/Button.astro"
import { getCollection, CollectionEntry, getEntry } from "astro:content"
import { DateTime } from "luxon"
import {
  CONFERENCE_TZ,
  ROOMS_BY_SLUG,
  TICKETS_AVAILABLE,
} from "../../main_config"

export async function getStaticPaths() {
  const pages = await getCollection("sessions")
  return pages.map((entry) => ({
    params: { sessionId: entry.id },
    props: { entry },
  }))
}
export type Props = {
  entry: CollectionEntry<"sessions">
}
const { entry } = Astro.props as Props
const speakers = (
  await Promise.all(
    entry.data.speakers.map(
      async (speakerId) => await getEntry("people", speakerId),
    ),
  )
).filter(((x) => !!x) as <T>(x: T | undefined) => x is T)
const track = entry.data.track
  ? await getEntry("tracks", entry.data.track)
  : null

const daySlug = DateTime.fromJSDate(entry.data.start, {
  zone: CONFERENCE_TZ,
}).weekdayLong?.toLowerCase()

const youtube_embed_url = "https://www.youtube-nocookie.com/embed/" + entry.data.youtube_slug
---

<style lang="scss">
  @use "sass:color";
  @import "../../vars.scss";
  main {
    margin-top: 70px;
    h1:first-of-type {
      margin-top: 0.5em;
    }
  }

  .cta {
    background-color: color.scale(
      $wattle-leaf,
      $saturation: -30%,
      $lightness: 90%
    );
    color: color.scale($wattle-leaf, $lightness: -50%);
    border-radius: 5px;
    padding: 1px;
    margin: 1em 0;

    p {
      margin: 10px;
    }
  }
</style>

<Base title={entry.data.title} ogImagePath={`/program/${entry.id}-og.png`}>
  {
    /*
<div class="time-bar">
  {{ session.start.strftime('%a %B %d, %I:%M %p')}}&ndash;{{
  session.end.strftime('%I:%M %p') }} &bull;
  <a href="/program/{{ session.start.strftime('%a').lower() }}/"
    >Back to program</a
  >
</div>



{% endif %}

*/
  }
  <main>
    <Button href={`/program/${daySlug}/`}>&larr; Return to program</Button>
    <h1>{entry.data.title}</h1>
    {
      entry.data.start && entry.data.end && entry.data.room ? (
        /* prettier-ignore */ <div class="time-bar">
          {DateTime.fromJSDate(entry.data.start, { zone: "Australia/Melbourne"}).toLocaleString(
            {weekday: 'long'},
          )}&nbsp;{DateTime.fromJSDate(entry.data.start, { zone: "Australia/Melbourne"}).toLocaleString(
            DateTime.TIME_SIMPLE,
          )}&ndash;{DateTime.fromJSDate(entry.data.end, { zone: "Australia/Melbourne"}).toLocaleString(
            DateTime.TIME_SIMPLE,
          )}
          in <b>{ROOMS_BY_SLUG[entry.data.room].name}</b>
        </div>
      ) : null
    }
    {
      entry.data.cw && (
        <div class="content-warning">
          <b>Content warning:</b> <Fragment set:html={entry.data.cw} />
        </div>
      )
    }
    {
      track && (
        <p>
          Part of the <a href={`/${track.slug}`}>{track.data.name}</a>{" "}
          specialist track
        </p>
      )
    }
    { entry.data.youtube_slug && (
      <iframe
        width="560"
        height="315"
        src={youtube_embed_url}
        frameborder="0"
        allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"
        allowfullscreen
        class="ytembed"
      ></iframe>
      )
    }

    <div class="lede"><Fragment set:html={entry.data.abstract} /></div>
    {
      TICKETS_AVAILABLE ? (
        <div class="cta">
          <p>
            See this talk and many more by getting your ticket to PyCon AU now!
          </p>
          <Button block href="/attend">
            I want a ticket!
          </Button>
        </div>
      ) : null
    }
    <Fragment set:html={entry.data.description} />
    {speakers.map((speaker) => <Profile person={speaker} bio />)}
  </main>
  {
    /*
{% for person in session.speakers %}
  {{ m.profile(person, bio=True) }}
{% endfor %}

{% endblock %}
*/
  }
</Base>
