title: The Long Hello World
start: 2025-09-13 13:30:00+10:00
end: 2025-09-13 14:00:00+10:00
room: ballroom2
track:
abstract: <p>Hello World is often used as a stand-in for "the simplest program", great
  for teaching and getting people started on their coding journey. But what <em>really</em>
  happens in that one line? This talk will be a deep dive into the Python interpreter,
  C libraries, Linux kernel, and beyond. We will poke holes in every abstraction and
  learn about our computers like never before, both to aid in debugging and to pick
  the best level of tooling for future development projects.</p>
description: <p>As described in the abstract, this talk is a 30 (or more) minute deep
  dive into the line <code>print("Hello world")</code>. This will include Python-level
  things like the parser, abstract syntax trees, and peeping at the generated bytecode,
  then how that bytecode is interpreted (and now JIT'd) by CPython, how the <code>print()</code>
  builtin gets found and executed, what's inside <code>builtin_print_impl()</code>
  and how that eventually calls into libc, then (time permitting) into syscalls, kernel-space
  code, file descriptor tables, and then back up the stack towards the shell and then
  terminal program receiving the output. I would like to fit in at least a little
  bit of a discussion of x86_64 instructions as well, likely as part of discussing
  how syscalls actually work. The goal is for everyone to walk away with a better
  understanding of what goes on "under the covers", and to be more comfortable diving
  down into deeper layers of abstraction when needed for debugging or future development.</p>
code: GWUBWQ
speakers:
- MY7QMZ
cw:
youtube_slug:
